<audio id="alertSound" src="https://actions.google.com/sounds/v1/alarms/alarm_clock.ogg" preload="auto"></audio>

<script>
  const firebaseConfig = {
    apiKey: "AIzaSyCjL2T_j_tnV22YuftQ444inUTd0FoDC7Q",
    authDomain: "logicnifty-live.firebaseapp.com",
    databaseURL: "https://logicnifty-live-default-rtdb.asia-southeast1.firebasedatabase.app",
    projectId: "logicnifty-live",
    storageBucket: "logicnifty-live.appspot.com",
    messagingSenderId: "812760222301",
    appId: "1:812760222301:web:61d73f8e9a37259abf5bb4"
  };

  firebase.initializeApp(firebaseConfig);
  const db = firebase.database();
  const signals = ["bottom_finder", "top_finder", "reversal_bull", "reversal_bear"];
  const lastTimestamps = {};

  let audioAllowed = false;

  // âœ… Only ask for sound permission once per day
  function setupAudioPermission() {
    const today = new Date().toISOString().slice(0, 10);
    if (localStorage.getItem("audioDate") === today) {
      audioAllowed = true;
    } else {
      const unlock = () => {
        const beep = document.getElementById("alertSound");
        beep.play().catch(() => {});
        beep.pause();
        audioAllowed = true;
        localStorage.setItem("audioDate", today);
        document.removeEventListener("click", unlock);
        document.removeEventListener("touchstart", unlock);
      };
      document.addEventListener("click", unlock);
      document.addEventListener("touchstart", unlock);
    }
  }

  setupAudioPermission();

  function playAlert(signalKey) {
    if (!audioAllowed) return;
    const names = {
      top_finder: "Top Finder",
      bottom_finder: "Bottom Finder",
      reversal_bull: "Reversal Bull",
      reversal_bear: "Reversal Bear"
    };
    const beep = document.getElementById("alertSound");
    beep.currentTime = 0;
    beep.play().catch(() => {});

    const msg = new SpeechSynthesisUtterance((names[signalKey] || "Signal") + " Activated");
    msg.lang = "en-IN";
    msg.volume = 1;
    msg.rate = 0.85;
    speechSynthesis.cancel();
    speechSynthesis.speak(msg);
  }

  function updateTime(signal, timestamp) {
    const el = document.getElementById(`${signal}_time`);
    const previous = lastTimestamps[signal];
    if (timestamp && timestamp !== previous) {
      el.innerText = timestamp;
      playAlert(signal); // ðŸŽ¯ play alert ONLY for updated signal
    } else if (!timestamp) {
      el.innerText = "Waiting for signal";
    }
    lastTimestamps[signal] = timestamp;
  }

  function fetchSignals() {
    db.ref("live_signals").once("value", snapshot => {
      const data = snapshot.val() || {};
      signals.forEach(signal => {
        updateTime(signal, data[signal]?.timestamp || null);
      });
    });
  }

  function resetIfMorning() {
    const now = new Date();
    const istOffset = 5.5 * 60 * 60 * 1000;
    const utc = now.getTime() + (now.getTimezoneOffset() * 60000);
    const istTime = new Date(utc + istOffset);
    if (istTime.getHours() === 9 && istTime.getMinutes() === 10) {
      signals.forEach(sig => {
        db.ref(`live_signals/${sig}/timestamp`).set(null);
        updateTime(sig, null);
      });
    }
  }

  fetchSignals();
  setInterval(fetchSignals, 10000); // Every 10 sec
  setInterval(resetIfMorning, 60000); // Every 1 min
</script>
